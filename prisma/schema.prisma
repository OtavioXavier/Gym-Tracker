generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Muscles {
  CHEST
  BACK
  QUADRICEPS
  HAMSTRING
  SHOULDERS
  ARMS
  CORE
  CARDIO
}

model User {
  id        String      @id @default(uuid())
  nickName  String
  email     String      @unique
  password  String
  avatarUrl String
  plan      WorkoutPlan @relation(fields: [planId], references: [id])
  planId    String
  album     Photo[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())

  @@map("users")
}
// Quando um usuario muda um plano em conjunto cria-se um plano novo
model WorkoutPlan {
  id        String     @id @default(uuid())
  name      String
  sheet     Exercise[]
  users     User[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())

  @@map("workout_plan")
}

model Exercise {
  id          String        @id @default(uuid())
  name        String
  description String
  thumbUrl    String        @map("thumb_url")
  muscle      Muscles
  plan        WorkoutPlan   @relation(fields: [planId], references: [id])
  planId      String
  weight       Int[]    
  repetitions  Int[]   
  restTime     Int[] 
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
}

model ExerciseHistory {
  id          String        @id @default(uuid())
  name        String
  muscle      Muscles
  planId      String
  weight       Int[]    
  repetitions  Int[]   
  restTime     Int[]

  updatedAt   DateTime      @default(now())
}

model Photo {
  id        String   @id @default(uuid())
  urlImage  String   @map("url_image")
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}